{"version":3,"sources":["actions/todosActions.js","components/TodoListItem.js","components/TodoList.js","components/NewTodoForm.js","selectors/todosSelectors.js","dictionary/WordSummary.js","thunks/thunks.js","dictionary/WordSearch.js","components/Menu.js","dictionary/details/WordDetails.js","App.js","store.js","reducers/reducers.js","index.js"],"names":["CREATE_TODO","MARK_TODO_AS_COMPLETED","DELETE_TODO","LOAD_WORD_IN_PROGRESS","LOAD_WORD_SUCCESS","LOAD_WORD_FAILURE","bounceAnimation","keyframes","fadeInRight","BouncyDiv","styled","div","connect","dispatch","onCompletedClicked","text","type","payload","markTodoAsCompleted","onDeleteClicked","deleteTodo","todo","className","IconButton","disabled","isCompleted","onClick","Checkbox","checked","color","style","todos","map","index","onCreateClicked","createTodo","useState","inputText","setInputText","autoComplete","onSubmit","e","preventDefault","TextField","value","id","label","variant","onChange","target","Button","backgroundColor","marginLeft","getTodos","state","getIncompleteTodos","createSelector","filter","getCompletedTodos","getWord","words","getWordPhonetics","phonetics","getWordMeanings","meanings","useStyles","makeStyles","root","overflowX","justifySelf","bullet","display","margin","transform","title","fontSize","borderRadius","pos","marginBottom","table","alignItems","justifyContent","tableItem","word","classes","data","Object","keys","key","to","exact","textDecoration","length","displayAlert","alert","isLoading","startLoadingWords","getState","a","axios","get","response","wordData","loadWords","searched","setSearched","timer","setTimer","handleDebounce","func","timeout","clearTimeout","t","setTimeout","debounce","useEffect","loadingMessage","width","height","textAlign","event","handleSearched","tabButton","marginRight","border","TabPanel","props","children","completedTodos","incompleteTodos","setValue","Tabs","TabIndicatorProps","scrollButtons","Tab","ShowPhonetics","padding","Array","isArray","fontWeight","toLocaleUpperCase","ShowMeanings","wordMeanings","wordPhonetics","App","path","component","Menu","WordDetails","reducers","action","newTodo","concat","persistConfig","storage","stateReconciler","autoMergeLevel2","rootReducer","combineReducers","persistedReducer","persistReducer","store","createStore","applyMiddleware","thunk","persistor","persistStore","ReactDOM","render","loading","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.00fa5da4.chunk.js","sourcesContent":["export const CREATE_TODO = \"CREATE_TODO\";\r\nexport const createTodo = (text) => ({\r\n  type: CREATE_TODO,\r\n  payload: { text }\r\n});\r\n\r\nexport const MARK_TODO_AS_COMPLETED = \"MARK_TODO_AS_COMPLETED\";\r\nexport const markTodoAsCompleted = (text) => ({\r\n  type: MARK_TODO_AS_COMPLETED,\r\n  payload: { text }\r\n});\r\n\r\nexport const DELETE_TODO = \"DELETE_TODO\";\r\nexport const deleteTodo = (text) => ({\r\n  type: DELETE_TODO,\r\n  payload: { text }\r\n});\r\n\r\nexport const SEARCHED_WORD = \"SEARCHED_WORD\";\r\nexport const searchWord = (text) => ({\r\n  type: SEARCHED_WORD,\r\n  payload: { text }\r\n});\r\n\r\nexport const LOAD_WORD_IN_PROGRESS = \"LOAD_WORD_IN_PROGRESS\";\r\nexport const loadWordInProgress = () => ({\r\n  type: LOAD_WORD_IN_PROGRESS,\r\n  // payload: { text }\r\n});\r\n\r\nexport const LOAD_WORD_SUCCESS = \"LOAD_WORD_SUCCESS\";\r\nexport const loadWordSuccess = wordData => ({\r\n  type: LOAD_WORD_SUCCESS,\r\n  payload: { wordData }\r\n});\r\n\r\nexport const LOAD_WORD_FAILURE = \"LOAD_WORD_FAILURE\";\r\nexport const loadWordFailure = () => ({\r\n  type: LOAD_WORD_FAILURE,\r\n});","/* eslint-disable react/prop-types */\r\nimport React from \"react\";\r\nimport \"./styles/TodoListItem.css\";\r\nimport styled, { keyframes } from 'styled-components'\r\nimport { fadeInRight } from \"react-animations\";\r\nimport { deleteTodo, markTodoAsCompleted } from \"../actions/todosActions\";\r\nimport { connect } from \"react-redux\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport { IconButton } from \"@material-ui/core\";\r\nimport { Checkbox } from \"@material-ui/core/\";\r\n\r\nconst bounceAnimation = keyframes`${fadeInRight}`;\r\n\r\nconst BouncyDiv = styled.div`\r\n  animation: 1s ${bounceAnimation};\r\n`;\r\n\r\n// eslint-disable-next-line react/prop-types\r\nconst TodoListItem = ({ todo, onCompletedClicked, onDeleteClicked }) => {\r\n  // console.log(todo);\r\n  return (\r\n    <>\r\n      <BouncyDiv className=\"todoListItem\">\r\n        <div>{todo.text}</div>\r\n        <div className=\"todoButton\">\r\n          <IconButton\r\n            aria-label=\"isCompleted\"\r\n            disabled={todo.isCompleted}\r\n            onClick={() => onCompletedClicked(todo.text)}\r\n          >\r\n            <Checkbox\r\n              checked={todo.isCompleted}\r\n              color=\"primary\"\r\n              style={{ color: \"#36345af6\" }}\r\n            />\r\n          </IconButton>\r\n\r\n          <IconButton\r\n            color=\"inherit\"\r\n            onClick={() => onDeleteClicked(todo.text)}\r\n          >\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </div>\r\n      </BouncyDiv>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onCompletedClicked: (text) => dispatch(markTodoAsCompleted(text)),\r\n  onDeleteClicked: (text) => dispatch(deleteTodo(text))\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(TodoListItem);\r\n","/* eslint-disable react/prop-types */\r\nimport React from \"react\";\r\nimport TodoListItem from \"./TodoListItem\";\r\nimport \"./styles/TodoListItem.css\";\r\nimport { connect } from \"react-redux\";\r\nconst TodoList = ({ todos }) => {\r\n  // console.log(todos);\r\n  // console.log(test + \"test\");\r\n  return (\r\n    <div className=\"todoList\">\r\n      <div className=\"todoListItems\">\r\n        {todos.map((todo, index) => (\r\n          <TodoListItem todo={todo} key={index} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default connect()(TodoList);\r\n","/* eslint-disable react/prop-types */\r\nimport React, { useState } from \"react\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport \"./styles/TodoListItem.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { createTodo } from \"../actions/todosActions\";\r\nimport { Button } from \"@material-ui/core\";\r\n\r\nconst NewTodoForm = ({ onCreateClicked }) => {\r\n  const [inputText, setInputText] = useState(\"\");\r\n  return (\r\n    <form\r\n      autoComplete=\"off\"\r\n      className=\"newTodoForm\"\r\n      onSubmit={(e) => {\r\n        // console.log(inputText);\r\n        e.preventDefault();\r\n      }}\r\n    >\r\n      <TextField\r\n        value={inputText}\r\n        id=\"outlined-basic\"\r\n        label=\"Todo text\"\r\n        variant=\"outlined\"\r\n        onChange={(e) => setInputText(e.target.value)}\r\n      />\r\n\r\n      <Button\r\n        // className=\"createTodoButton\"\r\n        color=\"primary\"\r\n        style={{ backgroundColor: \"white\", marginLeft: \"10px\" }}\r\n        type=\"submit\"\r\n        onClick={() => {\r\n          // console.log(inputText);\r\n          onCreateClicked(inputText);\r\n          setInputText(\"\");\r\n          // console.log(inputText);\r\n        }}\r\n      >\r\n        Add\r\n      </Button>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onCreateClicked: (text) => dispatch(createTodo(text))\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(NewTodoForm);\r\n","import { createSelector } from \"reselect\";\r\n\r\nexport const getTodos = (state) => state.todos;\r\nexport const getIncompleteTodos = createSelector(getTodos, (todos) =>\r\n  todos.filter((todo) => !todo.isCompleted)\r\n);\r\nexport const getCompletedTodos = createSelector(getTodos, (todos) =>\r\n  todos.filter((todo) => todo.isCompleted)\r\n);\r\n\r\nexport const getWord = (state) => state.words;\r\nexport const getWordPhonetics = createSelector(getWord, (words) => words[0].phonetics);\r\nexport const getWordMeanings = createSelector(getWord, (words) => words[0].meanings);\r\n","/* eslint-disable react/prop-types */\r\nimport React from 'react';\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { getWord } from '../selectors/todosSelectors';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        overflowX: \"auto\",\r\n        justifySelf: \"center\",\r\n        backgroundColor: \"#181313\",\r\n        color: \"white\"\r\n    },\r\n    bullet: {\r\n        display: \"inline-block\",\r\n        margin: \"0 2px\",\r\n        transform: \"scale(0.8)\"\r\n    },\r\n    title: {\r\n        fontSize: 30,\r\n        borderRadius: 50\r\n        // boxShadow: \"20px 20px 60px #f8f8fcdc, -20px -20px 60px #9998a844\"\r\n    },\r\n    pos: {\r\n        marginBottom: 12\r\n    },\r\n    table: {\r\n        display: \"block\",\r\n        // backgroundColor: 'aliceblue',\r\n\r\n        alignItems: \"center\",\r\n        justifySelf: \"center\",\r\n        justifyContent: \"center\"\r\n    },\r\n    tableItem: {\r\n        borderRadius: 50\r\n    }\r\n});\r\n\r\n\r\nconst WordSummary = ({ word }) => {\r\n    const classes = useStyles();\r\n    if (!word) {\r\n        return null\r\n    }\r\n    const data = word[0];\r\n    // console.log(data.meanings);\r\n    return (\r\n        <div>\r\n            {Object.keys(data).map((key) => (\r\n                <table key={key}>\r\n                    <thead>\r\n                        <tr className={classes.tableItem}>\r\n                            <td>\r\n                                <h4 style={{ fontSize: \"25px\", color: \"wheat\" }}>{key}</h4>\r\n                            </td>\r\n                            <td style={{ fontSize: \"30px\", color: \"white\" }}>-</td>\r\n                            <td style={{ fontSize: \"25px\", color: \"white\" }}>\r\n                                {typeof data[key] === typeof {} ? (\r\n                                    // console.log(data[key])\r\n                                    <Link to=\"/showdetails\" exact=\"true\" style={{ textDecoration: \"none\", color: \"rgba(80, 78, 128, 0.965)\" }}>{data[key].length}  -- See Details</Link>\r\n                                ) : (\r\n                                    data[key]\r\n                                )}\r\n                            </td>\r\n                        </tr>\r\n                    </thead>\r\n                </table>\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    word: getWord(state),\r\n})\r\n\r\nexport default connect(mapStateToProps)(WordSummary);","import {\r\n    loadWordInProgress,\r\n    loadWordSuccess,\r\n    loadWordFailure,\r\n} from '../actions/todosActions';\r\n\r\nimport axios from 'axios';\r\n\r\n// eslint-disable-next-line no-unused-vars\r\nexport const loadWords = (text) => async (dispatch, getState) => {\r\n    const url = \"https://api.dictionaryapi.dev/api/v2/entries/en_US/\";\r\n    try {\r\n        dispatch(loadWordInProgress());\r\n        const response = await axios.get(url + text);\r\n        const words = await response.data;\r\n\r\n        dispatch(loadWordSuccess(words));\r\n    } catch (error) {\r\n        dispatch(loadWordFailure());\r\n        dispatch(displayAlert(error));\r\n    }\r\n}\r\n\r\nexport const displayAlert = text => () => {\r\n    alert(`Error : ${text}`);\r\n}","/* eslint-disable react/prop-types */\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport \"../components/styles/TodoListItem.css\";\r\nimport WordSummary from \"./WordSummary\";\r\nimport { connect } from \"react-redux\";\r\nimport { loadWords } from '../thunks/thunks'\r\n\r\nconst WordSearch = ({ isLoading, startLoadingWords }) => {\r\n    const [searched, setSearched] = useState(\"\");\r\n    const [timer, setTimer] = useState(\"\");\r\n    const handleSearched = (event) => {\r\n        setSearched(event.target.value);\r\n    };\r\n\r\n    const debounce = (func, timeout = 1000) => {\r\n        return () => {\r\n            clearTimeout(timer);\r\n            const t = setTimeout(func, timeout);\r\n            setTimer(t);\r\n        };\r\n    };\r\n\r\n    const handleLoadWords = () => {\r\n        startLoadingWords(searched);\r\n    }\r\n\r\n    const handleDebounce = debounce(handleLoadWords);\r\n\r\n    useEffect(() => {\r\n        if (searched !== \"\") {\r\n            handleDebounce();\r\n        }\r\n    }, [searched]);\r\n\r\n    const loadingMessage = <div style={{ backgroundColor: \"white\", width: \"100%\", height: '50vh', textAlign: \"center\", fontSize: '20px', alignItems: 'center' }}>Loading word data ...</div>\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"newTodoForm\">\r\n                <TextField\r\n                    value={searched}\r\n                    id=\"outlined-basic\"\r\n                    label=\"Word\"\r\n                    variant=\"outlined\"\r\n                    onChange={(event) => handleSearched(event)}\r\n                />\r\n            </div>\r\n            {\r\n                isLoading ? loadingMessage : <WordSummary />\r\n            }\r\n        </>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isLoading: state.isLoading,\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    startLoadingWords: (text) => dispatch(loadWords(text)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(WordSearch);","/* eslint-disable react/prop-types */\r\nimport React, { useState } from \"react\";\r\nimport { Tab, Tabs } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport \"./styles/Menu.css\";\r\nimport TodoList from \"./TodoList\";\r\nimport NewTodoForm from \"./NewTodoForm\";\r\nimport {\r\n  getCompletedTodos,\r\n  getIncompleteTodos\r\n} from \"../selectors/todosSelectors\";\r\nimport { connect } from \"react-redux\";\r\n// import SearchBar from \"../dictionary/SearchBar\";\r\nimport WordSearch from \"../dictionary/WordSearch\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  tabButton: {\r\n    marginRight: \"25px\",\r\n    backgroundColor: \"#22222269\",\r\n    borderRadius: 30,\r\n    border: \"solid 1px grey\",\r\n    color: \"white\"\r\n  }\r\n}));\r\n\r\n// eslint-disable-next-line react/prop-types\r\nconst Menu = ({ completedTodos, incompleteTodos }) => {\r\n  const [value, setValue] = useState(0);\r\n  const classes = useStyles();\r\n  const handleTabs = (event, value) => {\r\n    setValue(value);\r\n  };\r\n  return (\r\n    <div className=\"menuContainer\">\r\n      {/* <Paper style={{ flexGrow: \"1\" }}> */}\r\n      <Tabs\r\n        TabIndicatorProps={{ style: { display: \"none\" } }}\r\n        value={value}\r\n        onChange={handleTabs}\r\n        className=\"tabs\"\r\n        variant=\"scrollable\"\r\n        scrollButtons=\"on\"\r\n      // centered\r\n      >\r\n        <Tab label=\"completed\" className={classes.tabButton} />\r\n        <Tab label=\"incomplete\" className={classes.tabButton} />\r\n        <Tab label=\"add todo\" className={classes.tabButton} />\r\n        <Tab label=\"dictionary\" className={classes.tabButton} />\r\n      </Tabs>\r\n      <TabPanel value={value} index={0} classes={{ color: \"red\" }}>\r\n        <TodoList todos={completedTodos} />\r\n      </TabPanel>\r\n      <TabPanel value={value} index={1}>\r\n        <TodoList todos={incompleteTodos} />\r\n      </TabPanel>\r\n      <TabPanel value={value} index={2}>\r\n        <NewTodoForm />\r\n      </TabPanel>\r\n      <TabPanel value={value} index={3}>\r\n        <WordSearch />\r\n      </TabPanel>\r\n      {/* </Paper> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst TabPanel = (props) => {\r\n  const { children, value, index } = props;\r\n  return <div>{value === index && <>{children}</>}</div>;\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  completedTodos: getCompletedTodos(state),\r\n  incompleteTodos: getIncompleteTodos(state)\r\n});\r\n\r\nexport default connect(mapStateToProps)(Menu);\r\n","/* eslint-disable react/prop-types */\r\nimport React from 'react';\r\nimport { getWordMeanings, getWordPhonetics } from '../../selectors/todosSelectors';\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from 'react-router-dom';\r\nimport { Button } from '@material-ui/core';\r\nconst WordDetails = ({ wordMeanings, wordPhonetics }) => {\r\n    // console.log(wordMeanings);\r\n    return (\r\n        <div style={{}}>\r\n            <Link to='/' style={{ textDecoration: 'none' }}>\r\n                <Button\r\n                    color=\"primary\"\r\n                    style={{ backgroundColor: \"white\", marginLeft: \"10px\" }}\r\n                >\r\n                    Back\r\n                </Button>\r\n            </Link>\r\n            <div style={{ textAlign: 'center', color: 'white' }}>\r\n                <Button\r\n                    color=\"primary\"\r\n                    style={{ backgroundColor: \"white\", marginLeft: \"10px\" }}\r\n                >\r\n                    Meanings\r\n                </Button>\r\n            </div>\r\n            <ShowMeanings meanings={wordMeanings} />\r\n            <div style={{ textAlign: 'center', color: 'white' }}>\r\n                <h1>Phonetics</h1>\r\n            </div>\r\n            <ShowPhonetics phonetics={wordPhonetics} />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst ShowPhonetics = ({ phonetics }) => {\r\n    // console.log(phonetics)\r\n    return (\r\n        <div style={{ padding: '0' }}>\r\n            {\r\n                Object.keys(phonetics).map((value, key) => (\r\n                    <ul key={key} style={{ border: '1px solid white', backgroundColor: 'black' }}>\r\n                        {Array.isArray(phonetics) ? null : (\r\n                            <li style={{ backgroundColor: 'black', color: 'purple', fontWeight: 'bold' }}>{value.toLocaleUpperCase()}</li>\r\n                        )}\r\n                        <li>\r\n                            {typeof phonetics[value] === typeof {} ? (\r\n                                <ShowMeanings meanings={phonetics[value]} />\r\n                            ) : (\r\n                                <li style={{ color: 'white', backgroundColor: 'black' }}>{phonetics[value]}</li>\r\n                            )}\r\n                        </li>\r\n                    </ul>\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n// eslint-disable-next-line no-unused-vars\r\nconst ShowMeanings = ({ meanings }) => {\r\n    return (\r\n        <div style={{ padding: '0' }}>\r\n            {\r\n                Object.keys(meanings).map((value, key) => (\r\n                    <ul key={key} style={{ backgroundColor: 'whitesmoke', border: '1px solid black' }}>\r\n                        {Array.isArray(meanings) ? null : (\r\n                            <li style={{ backgroundColor: 'white', color: 'purple', fontWeight: 'bold' }}>{value.toLocaleUpperCase()}</li>\r\n                        )}\r\n                        <li>\r\n                            {typeof meanings[value] === typeof {} ? (\r\n                                <ShowMeanings meanings={meanings[value]} />\r\n                            ) : (\r\n                                <li style={{ color: 'black' }}>{meanings[value]}</li>\r\n                            )}\r\n                        </li>\r\n                    </ul>\r\n                ))\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    wordMeanings: getWordMeanings(state),\r\n    wordPhonetics: getWordPhonetics(state),\r\n})\r\n\r\nexport default connect(mapStateToProps, null)(WordDetails);","// import \"./styles.css\";\n// import Menu from \"./components/Menu\";\nimport React from 'react'\nimport Menu from './components/Menu';\nimport WordDetails from './dictionary/details/WordDetails'\nimport './styles.css';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route path=\"/dict-todos/\" exact component={Menu} />\n          <Route path=\"/dict-todos/showdetails\" exact component={WordDetails} />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport { persistReducer } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport autoMergeLevel2 from 'redux-persist/es/stateReconciler/autoMergeLevel2';\r\nimport { todos, isLoading, words } from './reducers/reducers';\r\nimport thunk from 'redux-thunk';\r\n\r\nconst reducers = {\r\n    todos,\r\n    isLoading,\r\n    words\r\n};\r\n\r\nconst persistConfig = {\r\n    key: 'root',\r\n    storage,\r\n    stateReconciler: autoMergeLevel2,\r\n}\r\n\r\nconst rootReducer = combineReducers(reducers);\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nexport const configureStore = () => createStore(\r\n    persistedReducer,\r\n    applyMiddleware(thunk)\r\n);","import {\r\n  CREATE_TODO,\r\n  MARK_TODO_AS_COMPLETED,\r\n  DELETE_TODO,\r\n  LOAD_WORD_SUCCESS,\r\n  LOAD_WORD_FAILURE,\r\n  LOAD_WORD_IN_PROGRESS,\r\n} from \"../actions/todosActions\";\r\n\r\nexport const words = (state, action) => {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case LOAD_WORD_SUCCESS: {\r\n      const { wordData } = payload;\r\n      return wordData;\r\n    }\r\n    case LOAD_WORD_IN_PROGRESS:\r\n    case LOAD_WORD_FAILURE:\r\n    default: {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport const isLoading = (state = false, action) => {\r\n  const { type } = action;\r\n  switch (type) {\r\n    case LOAD_WORD_IN_PROGRESS: {\r\n      return true;\r\n    }\r\n    case LOAD_WORD_SUCCESS:\r\n    case LOAD_WORD_FAILURE: {\r\n      return false;\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n\r\n\r\nexport const todos = (\r\n  state = [\r\n    {\r\n      text: \"your completed todos will appear here\",\r\n      isCompleted: true\r\n    },\r\n    {\r\n      text: \"your incomplete todos will appear here!\",\r\n      isCompleted: false\r\n    }\r\n  ],\r\n  action\r\n) => {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case CREATE_TODO: {\r\n      const newTodo = {\r\n        text: payload.text,\r\n        isCompleted: false\r\n      };\r\n      return state.concat(newTodo);\r\n    }\r\n    case MARK_TODO_AS_COMPLETED: {\r\n      const { text } = payload;\r\n      return state.map((todo) =>\r\n        todo.text === text ? { ...todo, isCompleted: true } : todo\r\n      );\r\n    }\r\n    case DELETE_TODO: {\r\n      const { text } = payload;\r\n      return state.filter((todo) => todo.text !== text);\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { persistStore } from \"redux-persist\";\nimport { PersistGate } from 'redux-persist/lib/integration/react';\nimport { Provider } from \"react-redux\";\nimport { configureStore } from \"./store\";\n// import reportWebVitals from './reportWebVitals'\n\nconst store = configureStore();\nconst persistor = persistStore(store);\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate\n      loading={<div>loading...</div>}\n      persistor={persistor}>\n      <React.StrictMode>\n        <App />\n      </React.StrictMode>\n    </PersistGate>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}